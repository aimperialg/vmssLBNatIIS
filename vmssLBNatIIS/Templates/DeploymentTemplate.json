{
  "$schema":"http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "resourceLocation":{
      "type":"string",
      "allowedValues":[
        "East US",
        "East US 2",
        "West US",
        "Central US",
        "South Central US",
	      "North Central US",
        "North Europe",
        "West Europe",
        "Southeast Asia",
        "East Asia",
        "Japan West",
        "Japan East",
       	"Brazil South",
	      "Australia East",
	      "Australia Southeast"
      ],
      "metadata":{
        "description":"Azure region where all resources will be deployed. This is distinct from resource group location."
      }
    },
    "vmSize":{
      "type":"string",
      "defaultValue":"Standard_A1",
      "metadata":{
        "description":"Size of VMs in the VM Scale Set."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "newStorageAccountSuffix": {
      "type": "string"
    },
    "uniqueDNSName": {
           "type": "string"
        },
    "vmssName":{
      "type":"string",
      "metadata":{
        "description":"String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength":9
    },
    "instanceCount":{
      "type":"int",
      "metadata":{
        "description":"Number of VM instances (100 or less)."
      },
      "maxValue":100
    },
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "baseURL": {
			"type": "string",
			"metadata": {
				"description": "The Base URL for the script and website"
			},
			"defaultValue": "https://raw.githubusercontent.com/jrudley/vmssNatPoolLBWeb/master/AzureResourceGroup1/"
		},
		"customScriptFile": {
			"type": "string",
			"metadata": {
				"description": "The name of the custom script file in the baseURL location"
			},
			"defaultValue": "deploy.ps1"
		}
  },
  "variables": {
    "iisConfigurationScriptLocation": "[concat(parameters('baseURL'),parameters('customScriptFile'))]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "storageAccountType": "Standard_LRS",
    "saCount": 5,
    "namingPrefix": "[toLower(parameters('vmssName'))]",
    "storageAccountPrefix": [
      "a",
      "g",
      "m",
      "s",
      "y"
    ],
    "vhdContainerName": "[concat(variables('namingPrefix'), 'vhd')]",
    "osDiskName": "[concat(variables('namingPrefix'), 'osdisk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "[concat(variables('namingPrefix'), 'vnet')]",
    "publicIPAddressName": "[concat(variables('namingPrefix'), 'pip')]",
    "subnetName": "[concat(variables('namingPrefix'), 'subnet')]",
    "loadBalancerName": "[concat(variables('namingPrefix'), 'lb')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbWebProbeID": "[concat(variables('lbID'),'/probes/',variables('lbWebProbeName'))]",
    "lbWebProbeName": "loadBalancerWebProbe",
    "lbSslWebProbeID": "[concat(variables('lbID'),'/probes/',variables('lbSslWebProbeName'))]",
    "lbSslWebProbeName": "loadBalancerSslWebProbe",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[concat(variables('namingPrefix'), 'natpool')]",
    "bePoolName": "[concat(variables('namingPrefix'), 'bepool')]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('bePoolName'))]",
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 3389,
    "nicName": "[concat(variables('namingPrefix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingPrefix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "osType": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version": "latest"
    },
    "diagnosticsStorageAccountName": "[concat('a', parameters('newStorageAccountSuffix'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "imageReference": "[variables('osType')]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]"
  },
  "resources":[
    {
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[variables('virtualNetworkName')]",
      "location":"[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
       "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties":{
        "addressSpace":{
          "addressPrefixes":[
            "[variables('addressPrefix')]"
          ]
        },
        "subnets":[
          {
            "name":"[variables('subnetName')]",
            "properties":{
              "addressPrefix":"[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type":"Microsoft.Storage/storageAccounts",
              "name": "[concat(variables('storageAccountPrefix')[copyIndex()], parameters('newStorageAccountSuffix'))]",
      "location":"[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
        "tags": {
        "displayName": "StorageAccounts"
      },
      "copy":{
        "name":"storageLoop",
        "count":"[variables('saCount')]"
      },
      "properties":{
        "accountType":"[variables('storageAccountType')]"
      }
    },
    {
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('publicIPAddressName')]",
      "location":"[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
            "tags": {
        "displayName": "PublicIP"
      },
      "properties":{
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 30,
        "dnsSettings":{
          "domainNameLabel": "[parameters('uniqueDNSName')]"
        }
      }
    },
    {
      "type":"Microsoft.Network/loadBalancers",
      "name":"[variables('loadBalancerName')]",
      "location":"[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
            "tags": {
        "displayName": "LoadBalancer"
      },
      "dependsOn":[
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "weblb",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "loadDistribution": "sourceIP",
              "probe": {
                "id": "[variables('lbWebProbeID')]"
              }
            }
          },
          {
            "name": "sslweblb",
            "properties": {
              "frontendIPConfiguration": {
                 "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "loadDistribution": "sourceIP",
              "probe": {
                "id": "[variables('lbWebProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbWebProbeName')]",
            "properties": {
              "protocol": "http",
              "port": 80,
              "intervalInSeconds": "15",
              "numberOfProbes": "5",
              "requestPath": "/default.aspx"
            }
          }
        ],
            "inboundNatPools": [
              {
                "name": "[variables('natPoolName')]",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "[variables('frontEndIPConfigID')]"
                  },
                  "protocol": "tcp",
                  "frontendPortRangeStart": "[variables('natStartPort')]",
                  "frontendPortRangeEnd": "[variables('natEndPort')]",
                  "backendPort": "[variables('natBackendPort')]"
                }
              }
            ]
          }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingPrefix')]",
      "location": "[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "tags": {
        "displayName": "VMScaleSet"
      },
      "dependsOn": [
        "storageLoop",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://a', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://g', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://m', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://s', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]",
	  	"[concat('https://y', parameters('newStorageAccountSuffix'), '.blob.core.windows.net/vmss')]"
              ],
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingPrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
           "extensionProfile": {
          "extensions" : [
            {
              "name": "Microsoft.Insights.VMDiagnosticsSettings",
              "properties": {
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                  "storageAccount": "[variables('diagnosticsStorageAccountName')]"
                },
                "protectedSettings": { 
                  "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                  "storageAccountKey": "[listkeys(variables('accountid'), '2015-05-01-preview').key1]",
                  "storageAccountEndPoint": "https://core.windows.net"
                }
              }
            },
            {
								"name": "iisInstall",
								"properties": {
									"publisher": "Microsoft.Compute",
									"type": "CustomScriptExtension",
									"typeHandlerVersion": "1.4",
									"autoUpgradeMinorVersion": false,
									"settings": {
										"fileUris": [
											"[variables('iisConfigurationScriptLocation')]"
										],
										"commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ',parameters('customScriptFile'),' -FileLocation ',parameters('baseUrl'))]"
									}
								}
							}
      ]
  }
        }
      }
    },
    {
			"type": "Microsoft.Insights/autoscaleSettings",
			"apiVersion": "2015-04-01",
			"name": "autoscalewad",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]"
			],
			"properties": {
				"name": "autoscalewad",
				"targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]",
				"enabled": true,
				"profiles": [
					{
						"name": "Profile1",
						"capacity": {
							"minimum": "1",
							"maximum": "10",
							"default": "1"
						},
						"rules": [
							{
								"metricTrigger": {
									"metricName": "\\Processor(_Total)\\% Processor Time",
									"metricNamespace": "",
									"metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT5M",
									"timeAggregation": "Average",
									"operator": "GreaterThan",
									"threshold": 50.0
								},
								"scaleAction": {
									"direction": "Increase",
									"type": "ChangeCount",
									"value": "1",
									"cooldown": "PT5M"
								}
							},
							{
								"metricTrigger": {
									"metricName": "\\Processor(_Total)\\% Processor Time",
									"metricNamespace": "",
									"metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmSSName'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT5M",
									"timeAggregation": "Average",
									"operator": "LessThan",
									"threshold": 40.0
								},
								"scaleAction": {
									"direction": "Decrease",
									"type": "ChangeCount",
									"value": "1",
									"cooldown": "PT2M"
								}
							}
						]
					}
				]
			}
		}
  ]
}
